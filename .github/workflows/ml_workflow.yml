# This is a basic workflow to help you get started with Actions
name: ML CI/CD Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "dev" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8.x'

      # Runs a single command using the runners shell
      - name: Run Hello
        run: echo Hello, Medium!

      # Install Python packages dependencies from requirements.txt file
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Execute unit tests for train_model.py script
      - name: Run model training unit tests
        run: |
          python -m pytest tests/unit_test_train_model.py

  CD:
    needs: CI
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8.x'

      # Install Python packages dependencies from requirements.txt file
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Run train model script
      - name: Train model
        run: |
          python train_model.py

      # Upload the model saved
      - name: Upload artifacts
        run:
          echo "You can choose where you want to storage your artifacts"

      # Schedule the execution of the model
      - name: Schedule execution
        run:
          echo "You can upload your new Airflow DAG to a specific folder "

      # Execute the model once to test if it does run
      - name: Run deploy tests
        run:
          echo "Here, you can execute a pytest to check if artifacts and the DAG were uploaded"
          echo "After this, you can ask Airflow to execute a first model run"